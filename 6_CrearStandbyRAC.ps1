. .\comunes\iniEntorno.ps1

loc "Comprobando que existen los servidores Virtuales"
$ok = $true
foreach ($nodo in $infra.nodos) {
    if (-not $nodo.existe()) { $ok = $false }
}
validacion $ok "Alguno de los servidores virtuales NO existe, saliendo del proceso"

foreach ($nodo in $Infra.nodos) {
    $nodo.arrancarNodo()
}

$ok = $infra.GI.VerificarCluster()
validacion $ok "El cluster no está en el estado esperado, saliendo del proceso"

$ok = $infra.GI.ValidarBD($infra.GI.prim)
validacion $ok "La base de datos primaria no está en el estado esperado, saliendo del proceso"

$ok = (-not$infra.GI.ValidarBD($infra.GI.stby))
validacion $ok "La base de datos en espera ya existe, saliendo del proceso"

$mishell = [shellLinux]::new("mish.sh", $Infra.seguridad.usrGrid, $Infra.seguridad.pasGrid, $RutTemp, "/tmp")
$mishell.titulo("Extrayendo fichero de password de primaria")
$mishell.linea("pwfich=``/u01/app/19.3.0/grid/bin/srvctl config database -db " + $infra.GI.prim + " | grep Password | cut -d ' ' -f 3``")
$mishell.linea("/u01/app/19.3.0/grid/bin/asmcmd pwcopy `$pwfich /tmp/orapw" + $infra.GI.stby + "")
$mishell.titulo("Creando listener temporal")
$mishell.linea("cp /u01/app/19.3.0/grid/network/admin/listener.ora /u01/app/19.3.0/grid/network/admin/listener.ora.bck")
$mishell.linea("echo 'SID_LIST_LISTENER =' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("echo '  (SID_LIST =' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("echo '    (SID_DESC =' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("echo '      (GLOBAL_DBNAME = " + $infra.GI.stby + ")' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("echo '      (ORACLE_HOME = /u01/app/oracle/product/19.3.0/dbhome_1)' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("echo '      (SID_NAME = " + $infra.GI.stby + ")' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("echo '    )' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("echo '  )' >> /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.titulo("Reiniciando listener")
$mishell.linea("/u01/app/19.3.0/grid/bin/srvctl stop listener -node " + $infra.prefnodo + "1")
$mishell.linea("/u01/app/19.3.0/grid/bin/srvctl start listener -node " + $infra.prefnodo + "1")
$mishell.EjecutarSh($infra.nodos[0].NombreVM, "Preparando grid")

$mishell = [shellLinux]::new("mish.sh", "oracle", $Infra.seguridad.pasOra, $RutTemp, "/tmp")

$mishell.linea("export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1")
$mishell.linea("export ORACLE_SID=" + $infra.GI.prim)
$mishell.linea("export ORACLE_BASE=/u01/app/oracle")

$mishell.titulo("Deteniendo base de datos primaria")
$mishell.linea("export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/srvctl stop database -db " + $infra.GI.prim)
$mishell.titulo("Iniciando instancia unica de base de datos primaria")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/srvctl start instance -db " + $infra.GI.prim + " -instance " + $infra.GI.prim + "1 -startoption mount")
$mishell.titulo("Configurando modo archivelog")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/sqlplus /nolog << EOF")
$mishell.linea("  connect sys/" + $infra.seguridad.pasOraSys + "@" + $infra.prefnodo + "1/" + $infra.GI.prim + "." + $infra.red.dominio + " as sysdba;")
$mishell.linea("  ALTER DATABASE ARCHIVELOG;")
$mishell.linea("EOF")
$mishell.titulo("Deteniendo instancia unica de base de datos primaria")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/srvctl stop database -db " + $infra.GI.prim)
$mishell.titulo("Iniciando base de datos primaria")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/srvctl start database -db " + $infra.GI.prim)
$mishell.linea("sleep 10")
$mishell.titulo("Preparando primaria")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/sqlplus /nolog << EOF")
$mishell.linea("connect sys/" + $infra.seguridad.pasOraSys + "@" + $infra.GI.prim + " as sysdba;")
$mishell.linea("alter database force logging;")
$grupo = 7
for ($i = 1; $i -le $infra.numNodos(); $i++) {
    $mishell.linea("alter database add standby logfile thread " + [string]$i  + " group " + [string]$grupo++ + " size 200M;")
    $mishell.linea("alter database add standby logfile thread " + [string]$i  + " group " + [string]$grupo++ + " size 200M;")
    $mishell.linea("alter database add standby logfile thread " + [string]$i  + " group " + [string]$grupo++ + " size 200M;")
}
$mishell.linea("alter system set log_archive_config='DG_CONFIG=(" + $infra.GI.prim + "," + $infra.GI.stby + ")' scope=both sid='*';")
$mishell.linea("alter system set log_archive_dest_1='LOCATION=USE_DB_RECOVERY_FILE_DEST VALID_FOR=(ALL_LOGFILES,ALL_ROLES) DB_UNIQUE_NAME=" + $infra.GI.prim + "' scope=both sid='*';")
$mishell.linea("alter system set log_archive_dest_state_1='enable' scope=both sid='*';")
$mishell.linea("alter system set log_archive_dest_2='SERVICE=" + $infra.GI.stby + " ASYNC valid_for=(ONLINE_LOGFILES,PRIMARY_ROLE) db_unique_name=" + $infra.GI.stby + "' scope=both sid='*';")
$mishell.linea("alter system set log_archive_dest_state_2='enable' scope=both sid='*';")
$mishell.linea("alter system set log_archive_max_processes=4 scope=both sid='*';")
$mishell.linea("alter system set standby_file_management='auto' scope=both sid='*';")
$mishell.linea("alter system set fal_server='" + $infra.GI.stby + "' scope=both sid='*';")
$mishell.linea("alter system set db_file_name_convert='" + $infra.GI.stby + "','" + $infra.GI.prim + "' scope=spfile sid='*';")
$mishell.linea("alter system set log_file_name_convert='" + $infra.GI.stby + "','" + $infra.GI.prim + "' scope=spfile sid='*'")
$mishell.linea("EOF")

$mishell.titulo("Creando directorios")
$mishell.linea("for i in {1.." + $infra.numNodos() + "}")
$mishell.linea("do")
$mishell.linea("  ssh " + $infra.prefnodo + "`$i 'mkdir -p /u01/app/oracle/admin/" + $infra.GI.stby + "/adump'")
$mishell.linea("done")

$mishell.titulo("Creando instancia auxiliar")
$mishell.linea("cp /tmp/orapw" + $infra.GI.stby + " /u01/app/oracle/product/19.3.0/dbhome_1/dbs/orapw" + $infra.GI.stby)
$mishell.linea("echo 'db_name=" + $infra.GI.prim + "' > /u01/app/oracle/product/19.3.0/dbhome_1/dbs/init" + $infra.GI.stby + ".ora")
$mishell.linea("echo 'db_unique_name=" + $infra.GI.stby + "' >> /u01/app/oracle/product/19.3.0/dbhome_1/dbs/init" + $infra.GI.stby + ".ora")
$mishell.linea("echo 'db_domain=" + $infra.red.Dominio + "' >> /u01/app/oracle/product/19.3.0/dbhome_1/dbs/init" + $infra.GI.stby + ".ora")
$mishell.linea("export ORACLE_SID=" + $infra.GI.stby)

$mishell.titulo("Iniciando instancia auxiliar")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/sqlplus /nolog << EOF")
$mishell.linea("connect sys/" + $infra.seguridad.pasOraSys + "@" + $infra.prefnodo + "1/" + $infra.GI.stby + " as sysdba")
$mishell.linea("startup nomount pfile='/u01/app/oracle/product/19.3.0/dbhome_1/dbs/init" + $infra.GI.stby + ".ora';")
$mishell.linea("EOF")

$mishell.titulo("Ejecutando duplicacion RMAN")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/rman << EOF")
$mishell.linea("connect target sys/" + $infra.seguridad.pasOraSys + "@" + $infra.GI.prim + ";")
$mishell.linea("connect auxiliary sys/" + $infra.seguridad.pasOraSys + "@" + $infra.prefnodo + "1/" + $infra.GI.stby + ";")
$mishell.linea("run {")
$mishell.linea("  allocate channel prmy1 type disk;")
$mishell.linea("  allocate channel prmy2 type disk;")
$mishell.linea("  allocate auxiliary channel stby1 type disk;")
$mishell.linea("  allocate auxiliary channel stby2 type disk;")
$mishell.linea("  duplicate target database for standby from active database")
$mishell.linea("  spfile")
$mishell.linea("    set db_unique_name='" + $infra.GI.stby + "'")
$mishell.linea("    set cluster_database='false'")
$mishell.linea("    set control_files='+DATA','+FRA'")
$mishell.linea("    set remote_listener='" + $infra.GI.cluster + "-scan:1521'")
$mishell.linea("    set fal_server='" + $infra.GI.prim + "'")
$mishell.linea("    set audit_file_dest='/u01/app/oracle/admin/" + $infra.GI.stby + "/adump'")
$mishell.linea("    set db_file_name_convert='" + $infra.GI.prim + "','" + $infra.GI.stby + "'")
$mishell.linea("    set log_file_name_convert='" + $infra.GI.prim + "','" + $infra.GI.stby + "'")
$mishell.linea("    nofilenamecheck;")
$mishell.linea("  allocate auxiliary channel stby type disk;")
$mishell.linea("  sql channel stby `"alter database recover managed standby database disconnect`";")
$mishell.linea("}")
$mishell.linea("EOF")

$mishell.titulo("Creando spfile para base de datos en espera")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/sqlplus /nolog << EOF")
$mishell.linea("connect sys/" + $infra.seguridad.pasOraSys + "@" + $infra.prefnodo + "1/" + $infra.GI.stby + " as sysdba;")
$mishell.linea("create pfile='/tmp/init.ora' from spfile;")
$mishell.linea("EOF")
$mishell.titulo("Editando spfile")
$mishell.linea("sed -i '/" + $infra.GI.stby + "._/d' /tmp/init.ora")
$mishell.linea("sed -i 's/" + $infra.GI.prim + "._/" + $infra.GI.stby + "._/g' /tmp/init.ora")
$mishell.linea("sed -i 's/" + $infra.GI.prim + "1/" + $infra.GI.stby + "1/g' /tmp/init.ora")
$mishell.linea("sed -i 's/" + $infra.GI.prim + "2/" + $infra.GI.stby + "2/g' /tmp/init.ora")
$mishell.linea("sed -i 's/cluster_database=FALSE/cluster_database=TRUE/g' /tmp/init.ora")
$mishell.linea("sed -i 's/SERVICE=" + $infra.GI.prim + "XDB/SERVICE=" + $infra.GI.stby + "XDB/g' /tmp/init.ora")
$mishell.linea("sed -i 's/ALL_ROLES) DB_UNIQUE_NAME=" + $infra.GI.prim + "/ALL_ROLES) DB_UNIQUE_NAME=" + $infra.GI.stby + "/g' /tmp/init.ora")
$mishell.linea("sed -i `"s/log_archive_dest_2='SERVICE=" + $infra.GI.stby + "/log_archive_dest_2='SERVICE=" + $infra.GI.prim + "/g`" /tmp/init.ora")
$mishell.linea("sed -i 's/ROLE) db_unique_name=" + $infra.GI.stby + "/ROLE) db_unique_name=" + $infra.GI.prim + "/g' /tmp/init.ora")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/sqlplus /nolog << EOF")
$mishell.linea("connect sys/" + $infra.seguridad.pasOraSys + "@" + $infra.prefnodo + "1/" + $infra.GI.stby + " as sysdba;")
$mishell.linea("create spfile='+DATA/" + $infra.GI.stby + "/spfile" + $infra.GI.stby + ".ora' from pfile='/tmp/init.ora';")
$mishell.linea("shutdown immediate;")
$mishell.linea("EOF")
$mishell.linea("echo `"spfile='+DATA/" + $infra.GI.stby + "/spfile" + $infra.GI.stby + ".ora'`" > /u01/app/oracle/product/19.3.0/dbhome_1/dbs/init" + $infra.GI.stby + "1.ora")
$mishell.linea("for i in {2.." + $infra.numNodos() + "}")
$mishell.linea("do")
$mishell.linea("  scp /u01/app/oracle/product/19.3.0/dbhome_1/dbs/init" + $infra.GI.stby + "1.ora " + $infra.prefnodo + "`$i:/u01/app/oracle/product/19.3.0/dbhome_1/dbs/init" + $infra.GI.stby + "`$i.ora")
$mishell.linea("done")

$mishell.titulo("Creando recursos de base de datos e instancias")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/srvctl add database -db " + $infra.GI.stby + " -oraclehome /u01/app/oracle/product/19.3.0/dbhome_1 -dbtype RAC -spfile '+DATA/" + $infra.GI.stby + "/spfile" + $infra.GI.stby + ".ora' -role physical_standby -diskgroup `"DATA,FRA`" -dbname " + $infra.GI.prim + " -domain " + $infra.red.dominio + " -startoption MOUNT")
$mishell.linea("for i in {1.." + $infra.numNodos() + "}")
$mishell.linea("do")
$mishell.linea("  /u01/app/oracle/product/19.3.0/dbhome_1/bin/srvctl add instance -db " + $infra.GI.stby + " -instance " + $infra.GI.stby + "`$i -node " + $infra.prefnodo + "`$i")
$mishell.linea("done")
$mishell.EjecutarSh($infra.nodos[0].NombreVM, "Creando Base de datos en espera")

$mishell = [shellLinux]::new("mish.sh", "root", $Infra.seguridad.pasRoot, $RutTemp, "/tmp")
$mishell.titulo("Configurando Password")
$mishell.linea("/u01/app/19.3.0/grid/bin/asmcmd pwcopy --dbuniquename " + $infra.GI.stby + " /tmp/orapw" + $infra.GI.stby + " +DATA/" + $infra.GI.stby + "/orapw" + $infra.GI.stby)
$mishell.EjecutarSh($infra.nodos[0].NombreVM, "Configurando fichero de password")

$mishell = [shellLinux]::new("mish.sh", "oracle", $Infra.seguridad.pasOra, $RutTemp, "/tmp")
$mishell.titulo("Iniciando base de datos en espera")
$mishell.linea("export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1")
$mishell.linea("export ORACLE_SID=" + $infra.GI.stby)
$mishell.linea("export ORACLE_BASE=/u01/app/oracle")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/srvctl start database -db " + $infra.GI.stby + " -startoption mount")
$mishell.titulo("creando tnsnames.ora en todos los nodos")
$mishell.linea("cp /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora.bck")
$mishell.linea("echo '" + $infra.GI.stby + " = (' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '  DESCRIPTION =' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '    (ADDRESS_LIST =' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '      (ADDRESS = (PROTOCOL = TCP)(HOST = " + $infra.GI.cluster + "-scan." + $infra.red.dominio + ")(PORT = 1521))' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '    )' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '    (CONNECT_DATA =' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '      (SERVER = DEDICATED)' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '      (SERVICE_NAME = " + $infra.GI.stby + "." + $infra.red.dominio + ")' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '    )' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("echo '  )' >> /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("for i in {2.." + $infra.numNodos() + "}")
$mishell.linea("do")
$mishell.linea("  ssh " + $infra.prefnodo + "`$i 'cp /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora.bck'")
$mishell.linea("  scp /u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora " + $infra.prefnodo + "`$i:/u01/app/oracle/product/19.3.0/dbhome_1/network/admin/tnsnames.ora")
$mishell.linea("done")
$mishell.linea("rm -f /tmp/init.ora")
$mishell.ejecutarSh($infra.nodos[0].NombreVM, "Iniciando base de datos en espera")

$mishell = [shellLinux]::new("mish.sh", $Infra.seguridad.usrGrid, $Infra.seguridad.pasGrid, $RutTemp, "/tmp")
$mishell.titulo("Eliminando listener temporal")
$mishell.linea("rm -f /tmp/orapw" + $infra.GI.stby + "")
$mishell.linea("cp /u01/app/19.3.0/grid/network/admin/listener.ora.bck /u01/app/19.3.0/grid/network/admin/listener.ora")
$mishell.linea("/u01/app/19.3.0/grid/bin/srvctl stop listener -node " + $infra.prefnodo + "1")
$mishell.linea("/u01/app/19.3.0/grid/bin/srvctl start listener -node " + $infra.prefnodo + "1")
$mishell.EjecutarSh($infra.nodos[0].NombreVM, "Eliminando Listener temporal")

$mishell = [shellLinux]::new("mish.sh", "oracle", $Infra.seguridad.pasOra, $RutTemp, "/tmp")
$mishell.titulo("Configurando Flashback en primaria")
$mishell.linea("export ORACLE_HOME=/u01/app/oracle/product/19.3.0/dbhome_1")
$mishell.linea("export ORACLE_BASE=/u01/app/oracle")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/sqlplus /nolog << EOF")
$mishell.linea("connect sys/" + $infra.seguridad.pasOraSys + "@" + $infra.GI.prim + " as sysdba;")
$mishell.linea("alter database flashback on;")
$mishell.linea("EOF")
$mishell.titulo("Configurando Flashback en espera")
$mishell.linea("/u01/app/oracle/product/19.3.0/dbhome_1/bin/sqlplus /nolog << EOF")
$mishell.linea("connect sys/" + $infra.seguridad.pasOraSys + "@" + $infra.GI.stby + " as sysdba;")
$mishell.linea("alter database recover managed standby database disconnect;")
$mishell.linea("host sleep 300;")
$mishell.linea("alter database recover managed standby database cancel;")
$mishell.linea("alter database flashback on;")
$mishell.linea("alter database recover managed standby database disconnect;")
$mishell.linea("EOF")
$mishell.titulo("Creando entradas oratab")
$mishell.linea("for i in {1.." + $infra.numNodos() + "}")
$mishell.linea("do")
$mishell.linea("  ssh " + $infra.prefnodo + "`$i 'echo `"" + $infra.GI.stby + ":/u01/app/oracle/product/19.3.0/dbhome_1:N`" >> /etc/oratab'")
$mishell.linea("done")
$mishell.EjecutarSh($infra.nodos[0].NombreVM, "Tareas de Post-Configuracion")

loc "Fin del proceso"

$evento.finGestor()
